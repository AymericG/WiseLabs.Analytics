@using System.Configuration
@using System.Linq
@using WiseLabs.Analytics

@inherits WebTemplateBase

<h1 id="PageTitle">
    Dashboard
</h1>

<style>
    .funnel { box-sizing: border-box; list-style-type: none; background-color: #ddd; margin: 0px; padding: 0px; width: 300px; }
    .funnel li .bar { background-color: #000; }
    .funnel li + li .bar { background-color: #333; }
    .funnel li + li + li .bar { background-color: #666; }
    .funnel li + li + li + li .bar { background-color: #999; }
    .funnel li + li + li + li + li .bar { background-color: #ccc; }

    .funnel li {
     width: 300px;   
     position: relative;
     height: 40px;
    }

    .text {
         position: absolute;   
         text-align: center;
         color: #fff; 
         width: 100%;
         top: 10px;
    }

    .bar {
         position: absolute;   
         height: 40px;
    }
</style>

@{
    var funnel = ConfigurationManager.AppSettings["WiseLabs.Analytics.Funnel"].Split(',');
    var cohorts = Tracker.GetEvents(funnel[0])
        .GroupBy(x => x.CohortName)
        .OrderByDescending(x => x.Key);
}

<p>
    Cohors found: @cohorts.Count()
</p>

@foreach (var cohort in cohorts)
{
    var firstEvent = cohort.SingleOrDefault(x => x.EventName == funnel[0]);
    double max = firstEvent == null ? 0 : firstEvent.EventCount;
    if (max != 0)
    {
        <h3>@cohort.Key</h3>
        <ul class="funnel">

            @foreach (var step in funnel)
            {
                var e = cohort.SingleOrDefault(x => x.EventName == step);
                var percent = e == null ? 0 : (double) e.EventCount * 100 / max;
                var pixels = percent * 3;

                <li>
                    @WiseLabs.Analytics.Html.Raw("<div class='bar' style='width: " + pixels + "px;'></div>")
                    <span class="text">@(step + ": " + percent.ToString("00.00") + "% (" + (e == null ? 0 : e.EventCount) + ")")</span>
                    
                </li>
                
            }
        </ul>
    }
}

@{
    
    var experiments = SplitTesting.GetExperiments();
    var experimentData = SplitTesting.GetEventsForExperiments()
        .GroupBy(x => x.ExperimentId)
        .OrderByDescending(x => x.Key);
}

<p>
    Experiments found: @experimentData.Count()
</p>

@foreach (var experiment in experimentData)
{
    var firstEvent = experiment.SingleOrDefault(x => x.EventName == funnel[0]);
    double max = firstEvent == null ? 0 : firstEvent.EventCount;
    if (max != 0)
    {
        <h3>Experiment #@experiment.Key: @experiments.Single(x => x.ExperimentId == experiment.Key).Name</h3>
        <ul class="funnel">

            @foreach (var step in funnel)
            {
                var e = experiment.SingleOrDefault(x => x.EventName == step);
                var percent = e == null ? 0 : (double) e.EventCount * 100 / max;
                var pixels = percent * 3;

                <li>
                    @WiseLabs.Analytics.Html.Raw("<div class='bar' style='width: " + pixels + "px;'></div>")
                    <span class="text">@(step + ": " + percent + "% (" + (e == null ? 0 : e.EventCount) + ")")</span>
                </li>

            }
        </ul>
    }
}
<p>
    Generated by Visual Studio extension RazorGenerator: https://visualstudiogallery.msdn.microsoft.com/1f6ec6ff-e89b-4c47-8e79-d2d68df894ec
</p>
